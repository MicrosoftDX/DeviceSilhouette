<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StateManagementServiceWebAPI</name>
    </assembly>
    <members>
        <member name="T:StateManagementServiceWebAPI.Controllers.DeviceMessageController">
            <summary>
            Get or manipulate commands for a device
            </summary>
        </member>
        <member name="M:StateManagementServiceWebAPI.Controllers.DeviceMessageController.#ctor">
            <summary>
            Lazy DI constructor ;-)
            </summary>
        </member>
        <member name="M:StateManagementServiceWebAPI.Controllers.DeviceMessageController.#ctor(StateProcessorService.IStateProcessorRemoting)">
            <summary>
            
            </summary>
            <param name="stateProcessor"></param>
        </member>
        <member name="M:StateManagementServiceWebAPI.Controllers.DeviceMessageController.GetMessage(System.String,System.Int32)">
            <summary>
            Get a specific message by device id and version
            </summary>
            <param name="deviceId">The id of the device</param>
            <param name="version">The version (message identifier) for the message to return</param>
            <returns></returns>
        </member>
        <member name="M:StateManagementServiceWebAPI.Controllers.DeviceMessageController.GetMessages(System.String,System.Nullable{System.Int32})">
            <summary>
            Get the last state reported by the device
            </summary>
            <param name="deviceId">The id of the device</param>
            <param name="continuationToken"></param>
            <returns></returns>
        </member>
        <member name="T:StateManagementServiceWebAPI.Controllers.DeviceCommandController">
            <summary>
            Get or manipulate commands for a device
            </summary>
        </member>
        <member name="M:StateManagementServiceWebAPI.Controllers.DeviceCommandController.#ctor">
            <summary>
            Lazy DI constructor ;-)
            </summary>
        </member>
        <member name="M:StateManagementServiceWebAPI.Controllers.DeviceCommandController.#ctor(StateProcessorService.IStateProcessorRemoting,CommunicationProviderService.ICommunicationProviderRemoting)">
            <summary>
            
            </summary>
            <param name="stateProcessor"></param>
            <param name="communicationProvider"></param>
        </member>
        <member name="M:StateManagementServiceWebAPI.Controllers.DeviceCommandController.Get(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="deviceId">The id of the device</param>
            <param name="commandId">The id of the command to retrieve (this is the correlation id for the command messages)</param>
            <returns></returns>
        </member>
        <member name="M:StateManagementServiceWebAPI.Controllers.DeviceCommandController.Post(System.String,StateManagementServiceWebAPI.Models.CreateCommandRequestModel)">
            <summary>
            Add a new command
            </summary>
            <param name="deviceId">The id of the device</param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="T:StateManagementServiceWebAPI.Controllers.DeviceStateController">
            <summary>
            Get state information for a device
            </summary>
        </member>
        <member name="M:StateManagementServiceWebAPI.Controllers.DeviceStateController.#ctor">
            <summary>
            Lazy DI constructor ;-)
            </summary>
        </member>
        <member name="M:StateManagementServiceWebAPI.Controllers.DeviceStateController.#ctor(StateProcessorService.IStateProcessorRemoting)">
            <summary>
            
            </summary>
            <param name="stateProcessor"></param>
            <param name="communicationProvider"></param>
        </member>
        <member name="M:StateManagementServiceWebAPI.Controllers.DeviceStateController.GetLastReportedState(System.String)">
            <summary>
            Get the last state reported by the device
            </summary>
            <param name="deviceId">The id of the device</param>
            <returns></returns>
        </member>
        <member name="M:StateManagementServiceWebAPI.Controllers.DeviceStateController.GetLastRequestedState(System.String)">
            <summary>
            Get the last state reported by the device or requested by the client (but not negatively acknowledged, expired, ...)
            </summary>
            <param name="deviceId">The id of the device</param>
            <returns></returns>
        </member>
        <member name="T:StateManagementServiceWebAPI.Filters.HandleInvalidModelAttribute">
            <summary>
            If model state is invalid, automatically return an ErrorModel
            </summary>
        </member>
        <member name="M:StateManagementServiceWebAPI.Filters.HandleInvalidModelAttribute.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            
            </summary>
            <param name="actionContext"></param>
        </member>
        <member name="M:StateManagementServiceWebAPI.Filters.HandleInvalidModelAttribute.StripInitialPrefix(System.String)">
            <summary>
            The key in the ModelState includes the variable name. E.g. "requestedState.Value" rather than "value"
            This method strips it out so that the message makes more sense to the API consumer
            This is a bit of a hack, but works for now
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:StateManagementServiceWebAPI.Helpers.ApiControllerResponseExtensions">
            <summary>
            Extensions to ApiControllers for customising the returned Response
            </summary>
        </member>
        <member name="M:StateManagementServiceWebAPI.Helpers.ApiControllerResponseExtensions.NotFound``1(System.Web.Http.ApiController,``0)">
            <summary>
            Send a NotFound (404) with body content
            </summary>
            <typeparam name="T"></typeparam>
            <param name="controller"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="T:StateManagementServiceWebAPI.Helpers.EnumIsDefinedValueAttribute">
            <summary>
            Validate that the value of the (enum) property is a defined member of the enum type
            </summary>
        </member>
        <member name="M:StateManagementServiceWebAPI.Helpers.EnumIsDefinedValueAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Perform the validation
            </summary>
            <param name="value"></param>
            <param name="validationContext"></param>
            <returns></returns>
        </member>
        <member name="T:StateManagementServiceWebAPI.Helpers.UnhandledErrorModelExceptionHandler">
            <summary>
            Catch-all handler as a last resort
            </summary>
        </member>
        <member name="M:StateManagementServiceWebAPI.Helpers.UnhandledErrorModelExceptionHandler.Handle(System.Web.Http.ExceptionHandling.ExceptionHandlerContext)">
            <summary>
            convert the exception into a result object
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:StateManagementServiceWebAPI.Helpers.UnhandledErrorModelExceptionHandler.ShouldHandle(System.Web.Http.ExceptionHandling.ExceptionHandlerContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:StateManagementServiceWebAPI.Models.DeviceCommand.CommandModel">
            <summary>
            Representation of a command with request and response (if received)
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceCommand.CommandModel.Id">
            <summary>
            The command Id - this is the correlation Id for the messages
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceCommand.CommandModel.DeviceId">
            <summary>
            The device Id the command relates to
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceCommand.CommandModel.Request">
            <summary>
            The Request specific properties
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceCommand.CommandModel.Response">
            <summary>
            The Response specific properties. Will be null if there is no response
            </summary>
        </member>
        <member name="M:StateManagementServiceWebAPI.Models.DeviceCommand.CommandModel.#ctor(DeviceRichState.DeviceMessage[])">
            <summary>
            Create the command model from DeviceMessages. 
            </summary>
            <param name="messages">The request and (optional) response. Request should be the first message</param>
        </member>
        <member name="T:StateManagementServiceWebAPI.Models.DeviceCommand.CommandRequestModel">
            <summary>
            Represent the request portion of a command
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceCommand.CommandRequestModel.Version">
            <summary>
            The 'version' for the message - this is a unique id within a device's messages
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceCommand.CommandRequestModel.Timestamp">
            <summary>
            The enqueued time for the message (UTC)
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceCommand.CommandRequestModel.Type">
            <summary>
            The mesasge type
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceCommand.CommandRequestModel.Subtype">
            <summary>
            The message subtype
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceCommand.CommandRequestModel.AppMetadata">
            <summary>
            The application-specific metadata stored with the command request
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceCommand.CommandRequestModel.Values">
            <summary>
            The values/body for the command request message
            </summary>
        </member>
        <member name="M:StateManagementServiceWebAPI.Models.DeviceCommand.CommandRequestModel.#ctor(DeviceRichState.DeviceMessage)">
            <summary>
            Construct the reponse representation from the response message
            </summary>
            <param name="request"></param>
        </member>
        <member name="T:StateManagementServiceWebAPI.Models.DeviceCommand.CommandResponseModel">
            <summary>
            Represent the request portion of a command
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceCommand.CommandResponseModel.Version">
            <summary>
            The 'version' for the message - this is a unique id within a device's messages
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceCommand.CommandResponseModel.Timestamp">
            <summary>
            The enqueued time for the message (UTC)
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceCommand.CommandResponseModel.Type">
            <summary>
            The mesasge type
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceCommand.CommandResponseModel.Subtype">
            <summary>
            The message subtype
            </summary>
        </member>
        <member name="M:StateManagementServiceWebAPI.Models.DeviceCommand.CommandResponseModel.#ctor(DeviceRichState.DeviceMessage)">
            <summary>
            Construct the request representation from the request message
            </summary>
            <param name="response"></param>
        </member>
        <member name="T:StateManagementServiceWebAPI.Models.CreateCommandRequestModel">
            <summary>
            Data model used to capture the State Request command added through the API
            </summary>
        </member>
        <member name="M:StateManagementServiceWebAPI.Models.CreateCommandRequestModel.#ctor">
            <summary>
                
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.CreateCommandRequestModel.Subtype">
            <summary>
            The subtype of the message to create, i.e. the type of Command Request to create
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.CreateCommandRequestModel.AppMetadata">
            <summary>
            The application specific metadata
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.CreateCommandRequestModel.Values">
            <summary>
            The device values (state) to set
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.CreateCommandRequestModel.TimeToLiveMilliSec">
            <summary>
            The time-to-live for the command message
            </summary>
        </member>
        <member name="T:StateManagementServiceWebAPI.Models.DeviceMessage.MessageModel">
            <summary>
            API representation of a message
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceMessage.MessageModel.DeviceId">
            <summary>
            The device ID for the message
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceMessage.MessageModel.TimeStamp">
            <summary>
            The timestamp for when the message was enqueued
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceMessage.MessageModel.Version">
            <summary>
            The version number for the message. This is a unique identifier for the message within a device id
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceMessage.MessageModel.Type">
            <summary>
            The main type for the message (e.g. CommandRequest, Report)
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceMessage.MessageModel.Subtype">
            <summary>
            The subtype for the message (e.g. SetState for CommandRequest messages)
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceMessage.MessageModel.CorrelationId">
            <summary>
            The correlation id for messages. Used to link related messages
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceMessage.MessageModel.AppMetadata">
            <summary>
            Application metadata (used by the application to store data associated with a command, e.g. the origin or reason)
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceMessage.MessageModel.Values">
            <summary>
            The message body. For state reports this is the state
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceMessage.MessageModel.MessageTtlMs">
            <summary>
            The message time-to-live (TTL) in milliseconds
            </summary>
        </member>
        <member name="T:StateManagementServiceWebAPI.Models.DeviceMessage.MessageListModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceMessage.MessageListModel.Values">
            <summary>
            The messages in the current page
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceMessage.MessageListModel.NextLink">
            <summary>
            The link to use to get the next page of messages
            </summary>
        </member>
        <member name="T:StateManagementServiceWebAPI.Models.DeviceStateModel">
            <summary>
            Represents the device state
            </summary>
        </member>
        <member name="M:StateManagementServiceWebAPI.Models.DeviceStateModel.#ctor(DeviceRichState.DeviceMessage)">
            <summary>
            
            </summary>
            <param name="deviceMessage"></param>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceStateModel.DeviceId">
            <summary>
            The ID of the device the state is for
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceStateModel.Timestamp">
            <summary>
            The timestamp for the state
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceStateModel.Version">
            <summary>
            The version/sequence number for the state
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceStateModel.CorrelationId">
            <summary>
            The correlation ID that the state corresponds to
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceStateModel.MessageType">
            <summary>
            
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceStateModel.MessageSubType">
            <summary>
            
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceStateModel.AppMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.DeviceStateModel.Values">
            <summary>
            
            </summary>
        </member>
        <member name="T:StateManagementServiceWebAPI.Models.ErrorModel">
            <summary>
            Representation for errors in API responses
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.ErrorModel.Code">
            <summary>
            The identifier for the error
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.ErrorModel.Message">
            <summary>
            Non-localized error description
            </summary>
        </member>
        <member name="T:StateManagementServiceWebAPI.Models.InvalidRequestErrorModel">
            <summary>
            Error model for ModelState validation errors
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.InvalidRequestErrorModel.ValidationMessages">
            <summary>
            The set of ModelState validation failures
            </summary>
        </member>
        <member name="T:StateManagementServiceWebAPI.Models.ValidationMessage">
            <summary>
            Representation of a ModelState validation failure
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.ValidationMessage.PropertyName">
            <summary>
            The name of the request property that failed validation
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.ValidationMessage.Messages">
            <summary>
            The ModelState validation failure messages for the property 
            </summary>
        </member>
        <member name="T:StateManagementServiceWebAPI.Models.UnhandledErrorModel">
            <summary>
            Representation for unhandled errors
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.UnhandledErrorModel.InnerError">
            <summary>
            Provide details on the cause of the error
            </summary>
        </member>
        <member name="T:StateManagementServiceWebAPI.Models.InnerErrorModel">
            <summary>
            Representation of the error info for unhandled errors
            </summary>
        </member>
        <member name="P:StateManagementServiceWebAPI.Models.InnerErrorModel.Message">
            <summary>
            The message for an unhandled error
            </summary>
        </member>
        <member name="T:StateManagementServiceWebAPI.Models.ErrorCode">
            <summary>
            List of error codes
            </summary>
        </member>
        <member name="F:StateManagementServiceWebAPI.Models.ErrorCode.InvalidDeviceId">
            <summary>
            The specified device id wasn't found
            </summary>
        </member>
        <member name="F:StateManagementServiceWebAPI.Models.ErrorCode.InvalidRequest">
            <summary>
            The request body/parameters are not valid
            </summary>
        </member>
        <member name="F:StateManagementServiceWebAPI.Models.ErrorCode.UnhandledError">
            <summary>
            Generic unhandled error - this should be the LAST RESORT of error handling!!
            </summary>
        </member>
        <member name="T:StateManagementServiceWebAPI.Models.ErrorMessage">
            <summary>
            List of error messages
            </summary>
        </member>
        <member name="M:StateManagementServiceWebAPI.Models.ErrorMessage.InvalidDeviceId(System.String)">
            <summary>
            The specified device id wasn't found
            </summary>
            <param name="deviceId"></param>
            <returns></returns>
        </member>
        <member name="M:StateManagementServiceWebAPI.Models.ErrorMessage.InvalidRequest">
            <summary>
            The request body/parameters are not valid
            </summary>>
            <returns></returns>
        </member>
        <member name="M:StateManagementServiceWebAPI.Models.ErrorMessage.UnhandledError">
            <summary>
            Generic unhandled error - this should be the LAST RESORT of error handling!!
            </summary>
        </member>
        <member name="T:StateManagementServiceWebAPI.StateManagementServiceWebAPI">
            <summary>
            The FabricRuntime creates an instance of this class for each service type instance. 
            </summary>
        </member>
        <member name="M:StateManagementServiceWebAPI.StateManagementServiceWebAPI.CreateServiceInstanceListeners">
            <summary>
            Optional override to create listeners (like tcp, http) for this service instance.
            </summary>
            <returns>The collection of listeners.</returns>
        </member>
        <member name="M:StateManagementServiceWebAPI.Program.Main">
            <summary>
            This is the entry point of the service host process.
            </summary>
        </member>
        <member name="T:StateManagementServiceWebAPI.Startup">
            <summary>
            API pipeline configuration
            </summary>
        </member>
        <member name="M:StateManagementServiceWebAPI.Startup.ConfigureApp(Owin.IAppBuilder)">
            <summary>
            This code configures Web API. The Startup class is specified as a type
            parameter in the WebApp.Start method.
            </summary>
            <param name="appBuilder"></param>
        </member>
    </members>
</doc>
